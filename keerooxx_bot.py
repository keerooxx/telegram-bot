import re
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, CallbackQueryHandler

ADMIN_CHAT_ID = 7795251994
BOT_TOKEN = "7587202133:AAH8ryH3GwJnVNTT1tpUAJ5XqOkKqrDnVWU"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
MENU_ABOUT = "üë®‚Äçüíª –û –Ω–∞—Å"
MENU_CATALOG = "üõí –ö–∞—Ç–∞–ª–æ–≥"
MENU_SUPPORT = "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
MENU_PROMOS = "üéÅ –ü—Ä–æ–º–æ–∫–æ–¥—ã"
MENU_BACK = "üîô –ù–∞–∑–∞–¥"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏–≥—Ä
GAME_PUBG = "üéÆ Pubg Mobile"
GAME_STANDOFF = "üí• Standoff2"
GAME_MINECRAFT = "üß± Minecraft"

# –°–ª–æ–≤–∞—Ä—å —Ü–µ–Ω –Ω–∞ —á–∏—Ç—ã
PRICES = {
    "‚ö° Zolo cheat": 600,
    "üåü Arrakis": 400,
    "üî• NOVA": 350,
    "üíé Expensive": 150,
    "üîÆ Quantium": 200,
    "‚öôÔ∏è Wexside": 350,
    "üåå Celestial": 400,
    "üî• Nursultan": 500,
}

def main_menu():
    return ReplyKeyboardMarkup(
        [[MENU_ABOUT, MENU_CATALOG, MENU_SUPPORT], [MENU_PROMOS]],
        resize_keyboard=True
    )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç, —Ö–æ—Ç–µ–ª –∫—É–ø–∏—Ç—å –¥–µ—à–µ–≤—ã–µ –∫–ª—é—á–∏ –Ω–∞ —á–∏—Ç—ã? üßê –¢–µ–±–µ –∫ –Ω–∞–º! üîë",
        reply_markup=main_menu()
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text.strip()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    forward_text = f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{user.username or '–ë–µ–∑ username'} (ID: {user.id}):\n{text}"
    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=forward_text)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é "–û –Ω–∞—Å"
    if text == MENU_ABOUT:
        await update.message.reply_text(
            "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–µ—à–µ–≤—ã–µ –∫–ª—é—á–∏ –Ω–∞ —á–∏—Ç—ã. üîë",
            reply_markup=ReplyKeyboardMarkup([[MENU_BACK]], resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é "–ö–∞—Ç–∞–ª–æ–≥"
    elif text == MENU_CATALOG:
        keyboard = [[GAME_PUBG, GAME_STANDOFF, GAME_MINECRAFT], [MENU_BACK]]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", 
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"
    elif text == MENU_SUPPORT:
        await update.message.reply_text(
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–∏—à–∏—Ç–µ –Ω–∞–º: @HELPERcosmoKeys üí¨",
            reply_markup=ReplyKeyboardMarkup([[MENU_BACK]], resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é "–ü—Ä–æ–º–æ–∫–æ–¥—ã"
    elif text == MENU_PROMOS:
        context.user_data["awaiting_promocode"] = True
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: üéüÔ∏è")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    elif text == MENU_BACK:
        await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", reply_markup=main_menu())

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã PUBG
    elif text == GAME_PUBG:
        keyboard = [["‚ö° Zolo cheat", "üåü Arrakis", "üî• NOVA"], [MENU_BACK]]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Ç—ã –¥–ª—è Pubg Mobile:", 
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã Standoff2
    elif text == GAME_STANDOFF:
        keyboard = [["üíé Expensive", "üîÆ Quantium"], [MENU_BACK]]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Ç—ã –¥–ª—è Standoff2:", 
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã Minecraft
    elif text == GAME_MINECRAFT:
        keyboard = [["‚öôÔ∏è Wexside", "üåå Celestial", "üî• Nursultan"], [MENU_BACK]]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Ç—ã –¥–ª—è Minecraft:", 
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —á–∏—Ç–∞
    elif text in PRICES:
        price = PRICES[text]
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É
        discount = 0.3 if context.user_data.get("promo_activated") else 0
        if discount:
            price = int(price * (1 - discount))

        buy_button = f"–ö–£–ü–ò–¢–¨ (–Ω–∞–≤—Å–µ–≥–¥–∞ {price}—Ä—É–±) üí≥"
        await update.message.reply_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {text}",
            reply_markup=ReplyKeyboardMarkup([[buy_button], [MENU_BACK]], resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏
    elif text.startswith("–ö–£–ü–ò–¢–¨"):
        keyboard = [["üí≥ –£–∫—Ä.–ö–∞—Ä—Ç–∞", "üí≥ –†—É—Å.–ö–∞—Ä—Ç–∞"], [MENU_BACK]]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", 
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    elif text in ["üí≥ –£–∫—Ä.–ö–∞—Ä—Ç–∞", "üí≥ –†—É—Å.–ö–∞—Ä—Ç–∞"]:
        await update.message.reply_text("üí≥ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã:\nNumber card / date / CVV2")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    elif context.user_data.get("awaiting_promocode"):
        if text.upper() == "BUBIN2025":
            context.user_data["promo_activated"] = True
            await update.message.reply_text("‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –°–∫–∏–¥–∫–∞ 30% –ø—Ä–∏–º–µ–Ω–µ–Ω–∞. üéâ")
        else:
            await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

        context.user_data["awaiting_promocode"] = False
        await update.message.reply_text("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é?", reply_markup=main_menu())

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–∞—Ä—Ç—ã
    elif re.match(r'^\d{16} \d{4} \d{3}$', text):
        await update.message.reply_text("üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! ‚úÖ", reply_markup=main_menu())

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    else:
        await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É üòÖ", reply_markup=main_menu())

if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(CallbackQueryHandler(handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
